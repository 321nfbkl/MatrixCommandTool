<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Geometry x:Key="CheckedGeometry">M 0,2 3,5 8,0</Geometry>
    <Style x:Key="CheckBoxDefaultStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle
                                    Margin="-4"
                                    Opacity=".6"
                                    RadiusX="4"
                                    RadiusY="4"
                                    SnapsToDevicePixels="True"
                                    Stroke="{DynamicResource TBoxWaterMarkColor}"
                                    StrokeDashArray="1 1"
                                    StrokeThickness="2" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource TBoxWaterMarkColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <FrameworkTemplate.Resources>
                        <ResourceDictionary>
                            <Storyboard x:Key="StoryboardCheckedTrue">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="StoryboardCheckedFalse">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="path" Storyboard.TargetProperty="(Shape.StrokeDashOffset)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="8" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ResourceDictionary>
                    </FrameworkTemplate.Resources>
                    <Grid
                        Name="templateRoot"
                        Background="#00FFFFFF"
                        SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Name="checkBoxBorder"
                            Width="14"
                            Height="14"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0" />
                        <Grid
                            Name="markGrid"
                            Width="18"
                            Height="18"
                            Column="0">
                            <Path
                                Name="path"
                                Width="12"
                                Height="12"
                                Data="{StaticResource CheckedGeometry}"
                                FlowDirection="LeftToRight"
                                Stretch="Uniform"
                                Stroke="{DynamicResource CheckBoxCheckedForeground}"
                                StrokeDashArray="8,8"
                                StrokeDashOffset="8"
                                StrokeThickness="2"
                                UseLayoutRounding="True" />
                            <Rectangle
                                Name="indeterminateMark"
                                Margin="2"
                                Fill="{DynamicResource HighLightColor}"
                                Opacity="0"
                                RadiusX="2"
                                RadiusY="2" />
                        </Grid>
                        <ContentPresenter
                            Name="contentPresenter"
                            Grid.Column="1"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource TBoxWaterMarkColor}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="true" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="UIElement.Opacity" Value=".8" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ToggleButton.IsChecked" Value="false" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{DynamicResource HighLightColor}" />
                        </MultiTrigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <TriggerBase.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedTrue}" />
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource StoryboardCheckedFalse}" />
                            </TriggerBase.ExitActions>
                            <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="0" />
                            <Setter Property="Background" Value="{DynamicResource HighLightColor}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource HighLightColor}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="false">
                            <Setter TargetName="path" Property="Shape.Stroke" Value="{DynamicResource CheckBoxBgColor}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="{x:Null}">
                            <Setter TargetName="indeterminateMark" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="UIElement.Opacity" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>