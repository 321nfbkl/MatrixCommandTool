<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:RD15Controls">
    <!--  自定义Button按钮样式  -->
    <Style TargetType="{x:Type local:ITCButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="BorderCornerRadius" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBgColor" Value="{Binding Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MouseOverFontColor" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MouseOverBorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}" />
        <Setter Property="PressedBgColor" Value="{Binding MouseOverBgColor, RelativeSource={RelativeSource Self}}" />
        <Setter Property="PressedFontColor" Value="{Binding MouseOverFontColor, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="PressedScale" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ITCButton}">
                    <Border
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding BorderCornerRadius}"
                        RenderTransformOrigin="0.5,0.5"
                        SnapsToDevicePixels="True">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Border.RenderTransform>
                        <ContentPresenter
                            x:Name="btnContent"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding MouseOverBgColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{Binding MouseOverFontColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{Binding PressedBgColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{Binding PressedFontColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="PressedScale" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.93" ScaleY="0.93" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="HasDisableContent" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{Binding DisableBgColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{Binding DisableForeColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="btnContent" Property="Content" Value="{Binding DisableText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  自定义Button按钮样式  -->
    <Style x:Key="ContainerBgImageStyle" TargetType="{x:Type local:ITCButton}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="BorderCornerRadius" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBgColor" Value="{Binding Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MouseOverFontColor" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="MouseOverBorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Self}}" />
        <Setter Property="PressedBgColor" Value="{Binding MouseOverBgColor, RelativeSource={RelativeSource Self}}" />
        <Setter Property="PressedFontColor" Value="{Binding MouseOverFontColor, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="PressedScale" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ITCButton}">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding BorderCornerRadius}"
                        RenderTransformOrigin="0.5,0.5"
                        SnapsToDevicePixels="True">
                        <Border.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="1" />
                        </Border.RenderTransform>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="bgBorder"
                                Grid.Column="0"
                                Width="16"
                                Height="16"
                                HorizontalAlignment="{TemplateBinding BackImageHorAlign}"
                                Background="{TemplateBinding Background}" />

                            <ContentPresenter
                                x:Name="btnContent"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bgBorder" Property="Background" Value="{Binding MouseOverBgColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{Binding MouseOverFontColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding MouseOverBorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="bgBorder" Property="Background" Value="{Binding PressedBgColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{Binding PressedFontColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="PressedScale" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.93" ScaleY="0.93" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="HasDisableContent" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bgBorder" Property="Background" Value="{Binding DisableBgColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Bd" Property="TextBlock.Foreground" Value="{Binding DisableForeColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="btnContent" Property="Content" Value="{Binding DisableText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="BackImageHorAlign" Value="Center">
                            <Setter TargetName="bgBorder" Property="Grid.Column" Value="1" />
                        </Trigger>
                        <Trigger Property="BackImageHorAlign" Value="Right">
                            <Setter TargetName="bgBorder" Property="Grid.Column" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>